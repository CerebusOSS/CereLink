name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - 'master'
      - 'releases/**'
  pull_request:
    branches:
      - master
  release:
    types: [published]

permissions:
  contents: write

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {name: "windows-x64", os: "windows-latest", cmake_extra: "-T v142,host=x86"}
          - { name: "macOS-latest", os: "macOS-latest"}
          - { name: "jammy", os: "ubuntu-22.04"}
          - { name: "ubuntu-latest", os: "ubuntu-latest"}

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure CBSDK
        run: |
          cmake --version
          cmake -B build -S . \
          -DCBSDK_BUILD_CBMEX=OFF \
          -DCBSDK_BUILD_CBOCT=OFF \
          -DCBSDK_BUILD_TEST=OFF \
          -DCBSDK_BUILD_SAMPLE=OFF \
          -DCBSDK_BUILD_HDF5=OFF \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_INSTALL_PREFIX=${PWD}/install \
          -DCPACK_PACKAGE_DIRECTORY=${PWD}/dist \
          -DCPACK_DEBIAN_PACKAGE_SHLIBDEPS=ON \
          ${{ matrix.config.cmake_extra }}

      - name: Build and Package
        run: |
          cmake --build build --target install --config Release -j
          cmake --build build --target package --config Release -j

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==2.16.5

      - name: Build wheels
        if: "!startsWith(matrix.config.os, 'ubuntu-') || matrix.config.os == 'ubuntu-latest'"
        run: python -m cibuildwheel bindings/Python --output-dir bindings/Python/dist
        env:
          CIBW_BUILD: cp39-* cp310-* cp311-* cp312-*
          CIBW_SKIP: "*-musllinux_* *-win32 *-manylinux_i686"
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT: CBSDK_INSTALL_PATH="${{ github.workspace }}/install"

      - name: Ubuntu - Prefix package with release name
        if: startswith(matrix.config.os, 'ubuntu-')
        run: |
          pushd dist
          temp="$(lsb_release -cs)"
          for name in *
          do
            mv "$name" "$(echo $temp)-$name"
          done
          popd

      - name: Upload C++ Packages
        uses: actions/upload-artifact@v4
        with:
          name: cpp-packages-${{ matrix.config.name }}
          path: dist/*
          if-no-files-found: ignore

      - name: Upload Python Wheels
        uses: actions/upload-artifact@v4
        if: "!startsWith(matrix.config.os, 'ubuntu-') || matrix.config.os == 'ubuntu-latest'"
        with:
          name: python-wheels-${{ matrix.config.name }}
          path: bindings/Python/dist/*.whl
          if-no-files-found: ignore

      - name: Attach to Release
        uses: softprops/action-gh-release@v1
        if: github.event_name == 'release'
        with:
          files: |
            dist/*
            bindings/Python/dist/*.whl
